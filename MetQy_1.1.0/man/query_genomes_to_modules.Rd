% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_genomes_to_modules.R
\name{query_genomes_to_modules}
\alias{query_genomes_to_modules}
\title{Evaluates the KEGG modules presence given genome information.}
\usage{
query_genomes_to_modules(GENOME_INFO, splitBy = "[;]", GENOME_ID_COL = 1,
  GENES_COL = 2, MODULE_ID = "", SEARCH_NAME = "", SEARCH_CLASS_I = "",
  SEARCH_CLASS_II = "", SEARCH_CLASS_III = "", EXCLUDE_NAME = "",
  OUT_MODULE_NAME = FALSE, META_OUT = FALSE, ADD_OUT = FALSE,
  use_genome_reference_table = NULL, ...)
}
\arguments{
\item{GENOME_INFO}{- character vector containing genome identifier(s) or organism name(s) OR data frame containing genome identifier/names(s) and gene list. See Details.}

\item{splitBy}{- string indicating the split pattern for the data contained in the column indicated by GENES_COL.
Default (" [;] ": uses ' \code{;} ' , the ' [ ] ' indicates that it is NOT a regular expression).}

\item{GENOME_ID_COL}{- optional. Column NAME or NUMBER containing genome NAME or IDENTIFIER. Default (\code{1}; <first column>). See Details.}

\item{GENES_COL}{- optional. Column NAME or NUMBER pointing to the GENES. Default (\code{2}; <second column>). See Details.}

\item{MODULE_ID}{- optional. Character vector listing specific KEGG module IDs (e.g. "M00001"). Default ("").}

\item{SEARCH_NAME}{- optional. Character vector listing terms to search in KEGG module \code{NAME} field (case-insensitive). Default ("").}

\item{SEARCH_CLASS_I}{- optional. Character vector listing terms to search in KEGG module \code{CLASS_I} field (case-insensitive). Default ("").}

\item{SEARCH_CLASS_II}{- optional. Character vector listing terms to search in KEGG module \code{CLASS_II} field (case-insensitive). Default ("").}

\item{SEARCH_CLASS_III}{- optional. Character vector listing terms to search in KEGG module \code{CLASS_III} field (case-insensitive). Default ("").}

\item{EXCLUDE_NAME}{- optional. Character vector listing terms that if matched in KEGG module \code{NAME} field will be excluded (case-insensitive).
Default ("").}

\item{OUT_MODULE_NAME}{- optional (logical). Should the column names of \code{MATRIX} be the module IDs (M numbers) or module names?
Default (\code{FALSE}; return matrix with M numbers)}

\item{META_OUT}{- optional (logical). Should the KEGG module metadata be outputed? Default (\code{FALSE}).}

\item{ADD_OUT}{- optional (logical). Should additional information be outputed? Default (\code{FALSE}).}

\item{use_genome_reference_table}{- optional. Provide a data frame with updated KEGG module database.
Default (\code{NULL}; inbuilt data used). See Details.}

\item{...}{- further arguments passed to \link{misc_geneVector_module}, such as \code{KO_in_DEF_EC} or \code{use_module_reference_table}. See Details.}
}
\value{
Returns a list containing the following objects:

\code{$MATRIX} - matrix of the datasets (rows) and the modules searched (columns) containing the fraction completeness.

\code{$QUERIES} - data frame listing the SEARCH_TERMS and ARGUMENTS used.

\code{$METADATA} - data frame containing the metadata from the modules analysed (if \code{META_OUT == TRUE}).\preformatted{
 Columns:
  (1) MODULE_ID     (4) CLASS_I     (7) DEFINITION
  (2) MODULE_NAME   (5) CLASS_II    (8) OPTIONAL
  (3) NAME_SHORT    (6) CLASS_III
 }
 An OPTIONAL entry of 'NA' indicates that there are no optional K numbers in that module.

\code{$ADD_INFO} - data frame containing additional information of the analysis (if \code{ADD_OUT == TRUE}).\preformatted{
 Columns:
  (1) GENOME_ID     (3) NAME_SHORT   (5) nBLOCKS    (7) OPTIONAL_PRESENT
  (2) MODULE_ID     (4) FRACTION     (6) COVERAGE
 }
  where 'COVERAGE' refers to the genes provided that are involved in the given module and genome.

  See \link{misc_geneVector_module} for additional details on the output.
}
\description{
This function returns the ‘completeness’ of KEGG modules in the provided genome(s)
(either as a genome identifier or as a lists of Enzyme Comission (EC) number or KEGG ortholog identifier, K number).
The user can define which modules the function should check by providing a single or set of modules under ‘\code{MODULE_ID}’.
If this is left blank, the function returns completeness of all KEGG modules (excluding modules defined in terms of other modules).
The function can also be restricted to a subset of all KEGG modules by using the \code{SEARCH_NAME} and \code{SEARCH_CLASS} arguments. See Details.
}
\details{
This function processes the \code{GENOME_INFO} by pasing each in turn to \code{misc_geneVector_module()} and collating all the output.
\code{GENOME_ID_COL} and \code{GENES_COL} are only used if \code{GENOME_INFO} is a data frame.
Post-analysis of this output can be carried out with \code{analysis_genomes_module_output()}.

Appropriate \code{GENOME_INFO} input can be either a character vector or a data frame:
\preformatted{
*character vector*
   options:
     (1) KEGG taxonomy identifier (T0 number; e.g. "T00001")
         AND/OR KEGG organism identifier (3 or 4 letter code; e.g. "eco").
     (2) Organism's scientific name (e.g. "Escherichia coli"; case-insensitive).
           Multiple strains might be matched in the KEGG organisms database and
           all will be processed. Strain information or full organism name can be
           added to reduce the search results; use the 'Definition' entry in KEGG
           \url{http://www.genome.jp/kegg/catalog/org_list.html}.

         NOTE: do NOT combine NAMES with IDENTIFIERS
         WARNING issued when there is no matching identifier in the
                  KEGG genome/organism databases.

*data frame*
   > column I  - genome name/identifier (pointed to by \code{GENOME_ID_COL}).
   > column II - concatenated string of either EC or K numbers using \code{splitBy}
                  as delimiter (pointed to by \code{GENES_COL}).
}

\code{KO_in_DEF_EC} - If the genes given are EC numbers, should K numbers present in the KEGG module definition be assumed to be present or not? Default (\code{FALSE}).

The \code{use_} set of argument allows users with KEGG FTP access to provide the updated data from the KEGG databases in the form of reference tables.
These reference tables can be generated with the \code{parseKEGG} family of functions and need to have a specific format (see function descriptions for details on format).
}
\examples{
## USE T numbers
T_NUMEBERS <- paste("T0000",1:5,sep="")
OUT <- query_genomes_to_modules(T_NUMEBERS,MODULE_ID = paste("M0000",1:5,sep=""),
                                 META_OUT = T, ADD_OUT = T)

## USE SPECIES NAMES
names <- c("escherichia coli","heliobacter")
OUT <- query_genomes_to_modules(names,MODULE_ID = paste("M0000",1:5,sep=""),
                                 META_OUT = T, ADD_OUT = T)

## USE USER-SPECIFIED GENE SETS
data(data_example_multi_ECs_KOs) # load example data set
names(data_example_multi_ECs_KOs)
   # "ID"       "ORG_ID"   "ORGANISM" "KOs"      "ECs"
OUT <- query_genomes_to_modules(data_example_multi_ECs_KOs,GENOME_ID_COL = "ID",
                                 GENES_COL = "KOs",MODULE_ID = paste("M0000",1:5,sep=""),
                                 META_OUT = T,ADD_OUT = T)

# Using EC numbers (less accurate)
OUT <- query_genomes_to_modules(data_example_multi_ECs_KOs,GENOME_ID_COL = "ID",
                                 GENES_COL = "ECs",MODULE_ID = paste("M0000",1:5,sep=""),
                                 META_OUT = T,ADD_OUT = T)

}
\seealso{
\link{misc_geneVector_module}, \link{analysis_genomes_module_output}, \link{plot_heatmap},

\link{data_example_multi_ECs_KOs}
}
