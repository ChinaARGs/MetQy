% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_modules_to_genomes.R
\name{query_modules_to_genomes}
\alias{query_modules_to_genomes}
\title{Find a KEGG genome that has a given KEGG module complete}
\format{\code{use_matrix_dataframe}  rows - genome identifiers, columns - module IDs.}
\usage{
query_modules_to_genomes(MODULE_ID, threshold = 1,
  use_matrix_dataframe = NULL, use_module_reference_table = NULL, ...)
}
\arguments{
\item{MODULE_ID}{- KEGG module identifier (M number, e.g. "M00001").}

\item{threshold}{- optional. Completness fraction desired (greater or equal). Default (\code{1}). Used as \code{fraction>=threshold}.}

\item{use_matrix_dataframe}{- optional. Provide module completeness fraction matrix or data frame of all KEGG genome entries with updated data.
Default (\code{NULL}; inbuilt data used). See Details.}

\item{use_module_reference_table}{- optional. Provide a data frame with updated KEGG module database OR with custom-made modules.
Default (\code{NULL}; inbuilt data used). See Details.}

\item{...}{- further arguments (currently unsupported)}
}
\value{
If a single \code{MODULE_ID} is provided, a vector which contains the mfc with the
KEGG genome identifiers (T number) as names is returned.

If multiple \code{MODULE_ID}s are provided, a matrix containing the mfc with the
KEGG genome identifiers (T number) as row names and the module IDs as column names is returned.
}
\description{
Find a KEGG genome that has a given KEGG module complete (to a \code{threshold}).
The module ‘completeness’ is based on the fraction of complete module blocks (given the KEGG module logical definition).
Thus, a threshold of 0.5 would mean that the function would return all genomes that contain at least half of the blocks of the given module.
See \link{parseKEGG_module} for further details on the KEGG module database.
}
\details{
The \code{use_} set of argument allows users with KEGG FTP access to provide the updated data from the KEGG databases in the form of
reference tables AND/OR for advanced users to provide custom-made modules (see below).
These reference tables can be generated with the \code{parseKEGG} family of functions and need to have a specific format
(see function descriptions for details on format).

To generate \code{use_matrix_dataframe}, store the \code{$MATRIX} output of \link{query_genomes_to_modules} when providing all genomes
using either the module default (i.e. all modules) or specifying a subset of modules AND/OR with
custom-made module definitions.
}
\examples{
genomes <- query_modules_to_genomes("M00001")

genomes <- query_modules_to_genomes(MODULE_ID = c("M00001","M00002"),threshold = 0.9)

}
\seealso{
\link{parseKEGG_module}, \link{query_genomes_to_modules}
}
