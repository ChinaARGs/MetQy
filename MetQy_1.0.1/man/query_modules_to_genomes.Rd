% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_modules_to_genomes.R
\name{query_modules_to_genomes}
\alias{query_modules_to_genomes}
\title{Find a KEGG genome that has a given KEGG module complete}
\format{\code{use_matrix_dataframe}  rows - genome identifiers, columns - module IDs.}
\usage{
query_modules_to_genomes(MODULE_ID, threshold = 1,
  use_matrix_dataframe = NULL, use_module_reference_table = NULL)
}
\arguments{
\item{MODULE_ID}{- KEGG module identifier (M number, e.g. "M00001").}

\item{threshold}{- optional. completness fraction desired (greater or equal). Default (\code{1}). Used as \code{fraction>=threshold}.}

\item{use_matrix_dataframe}{- optional. Provide a matrix or data frame with the output from \code{query_genomes_to_modules} using all KEGG genome entries with updated data.
Default (\code{NULL}; inbulit data used). See Details.}

\item{use_module_reference_table}{- optional. Provide a data frame with updated KEGG module database OR with costum-made modules.
Default (\code{NULL}; inbulit data used). See Details.}
}
\value{
Vector containing the KEGG genome identifiers (T number) that express the module to the set \code{threshold}.
}
\description{
Find a KEGG genome that has a given KEGG module complete (to a \code{threshold}).
The module ‘completeness’ is based on the fraction of complete module blocks (given the KEGG module logical definition).
Thus, a threshold of 0.5 would mean that the function would return all genomes that contain at least half of the blocks of the given module.
See \link{parseKEGG_module} for further details on the KEGG module database.
}
\details{
The \code{use_} set of argument allows users with KEGG FTP access to provide the updated data from the KEGG databases in the form of reference tables AND/OR for advanced users to provide contum-made modules (see below).
These reference tables can be generated with the \code{parseKEGG} family of functions and need to have a specific format (see function descriptions for details on format).

The user can then run the function \code{query_genomes_to_modules} with the updated KEGG databases information AND/OR with
costum-made module definitions and use the matrix that is outputed to run this function.

The module definition (contained in \code{module_reference_table}) describes the relationship between genes and modules
and is used to identify the modules in which \code{gene} is involved.
The user can provide costum-made module definitions that use the logical expression format (however, the table format must be conserved!).

FTP users - this function does not currently support using updated data.
This funciton can be replicated manually by first running \code{query_genomes_to_modules} on all genomes and modules and then applying the desired threshold (see function code).
}
\examples{
genomes <- query_modules_to_genomes("M00001")

genomes <- query_modules_to_genomes(MODULE_ID = c("M00001","M00002"),,threshold = 0.75)

}
\seealso{
\link{parseKEGG_module}
}

